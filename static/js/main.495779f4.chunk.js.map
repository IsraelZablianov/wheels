{"version":3,"sources":["components/background/background.tsx","components/background/index.ts","utils/http/routes.ts","utils/http/index.ts","utils/http/http.ts","components/loading/loading.tsx","components/loading/index.ts","pages/login/login.tsx","pages/login/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Background","className","xmlns","viewBox","fill","fillOpacity","d","ROUTES","httpClient","instance","this","axios","create","baseURL","credentials","token","btoa","userName","pass","defaults","headers","common","route","a","body","post","Loading","withOverlay","Login","unauthorizedErrorMsg","useState","updateUserName","updatePass","isLoading","updateLoadingStatus","errorMsg","updateErrorMsg","isLoginErrorMsgVisiable","updateLoginErrorMsgVisability","res","console","log","JSON","stringify","handleLoginFailed","error","axiosError","isAxiosError","response","status","currentHour","Date","getHours","getGeneralGreeding","onClick","htmlFor","type","name","value","onChange","event","target","onSubmit","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.495779f4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './background.scss';\r\n\r\nfunction Background() {\r\n  return (\r\n    <div className=\"background\">\r\n      <div className=\"before-wave\"></div>\r\n      <div className=\"wave\">\r\n        <svg className=\"first-wave\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\"><path fill=\"#285181\" fillOpacity=\"1\" d=\"M0,288L60,277.3C120,267,240,245,360,202.7C480,160,600,96,720,85.3C840,75,960,117,1080,133.3C1200,149,1320,139,1380,133.3L1440,128L1440,0L1380,0C1320,0,1200,0,1080,0C960,0,840,0,720,0C600,0,480,0,360,0C240,0,120,0,60,0L0,0Z\"></path></svg>\r\n        <svg className=\"second-wave\"xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\"><path fill=\"#6bb5ff\" fillOpacity=\"1\" d=\"M0,320L40,314.7C80,309,160,299,240,256C320,213,400,139,480,128C560,117,640,171,720,186.7C800,203,880,181,960,170.7C1040,160,1120,160,1200,160C1280,160,1360,160,1400,160L1440,160L1440,0L1400,0C1360,0,1280,0,1200,0C1120,0,1040,0,960,0C880,0,800,0,720,0C640,0,560,0,480,0C400,0,320,0,240,0C160,0,80,0,40,0L0,0Z\"></path></svg>\r\n        {/* <svg className=\"second-wave\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\"><path fill=\"#6bb5ff\" fill-opacity=\"1\" d=\"M0,288L60,277.3C120,267,240,245,360,202.7C480,160,600,96,720,85.3C840,75,960,117,1080,133.3C1200,149,1320,139,1380,133.3L1440,128L1440,0L1380,0C1320,0,1200,0,1080,0C960,0,840,0,720,0C600,0,480,0,360,0C240,0,120,0,60,0L0,0Z\"></path></svg> */}\r\n      </div>\r\n      <div className=\"after-wave\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Background;\r\n","import Background from './background';\r\nexport default Background;","export const ROUTES = {\r\n    baseUrl: 'https://wheels-backend.herokuapp.com/',\r\n    login: 'auth/login' \r\n};","import httpClient from './http';\r\nexport * from './routes';\r\nexport default httpClient;\r\n","import axios, { AxiosInstance, AxiosResponse } from 'axios';\r\nimport { CredentialsInfo } from '../../models';\r\nimport { ROUTES } from './routes';\r\n\r\nclass HttpClient {\r\n    readonly instance: AxiosInstance;\r\n\r\n    constructor() {\r\n        this.instance = axios.create({\r\n            baseURL: ROUTES.baseUrl\r\n        });\r\n    }\r\n\r\n    addAuthHeader(credentials: CredentialsInfo): void {\r\n        const token = btoa(`${credentials.userName}:${credentials.pass}`);\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    }\r\n\r\n    async post<T>(route: string, body: unknown = {}): Promise<AxiosResponse<T>> {\r\n        return this.instance.post<T>(route, body);\r\n    }\r\n}\r\n\r\nconst httpClient = new HttpClient();\r\nexport default httpClient;","import './loading.scss';\r\n\r\nexport interface LoadingProps {\r\n    withOverlay?: boolean;\r\n}\r\n\r\nfunction Loading({ withOverlay }: LoadingProps) {\r\n    return (\r\n        <>\r\n            <div className=\"slider\">\r\n                <div className=\"line\"></div>\r\n                <div className=\"subline inc\"></div>\r\n                <div className=\"subline dec\"></div>\r\n            </div>\r\n            {   withOverlay &&\r\n                <div className=\"overlay\"></div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Loading;\r\n","import Loading from './loading';\r\nexport default Loading;","import './login.scss';\r\nimport Background from '../../components/background';\r\nimport httpClient, { ROUTES } from '../../utils/http';\r\nimport React, { useState } from 'react';\r\nimport { AxiosError } from 'axios';\r\nimport Loading from '../../components/loading';\r\n\r\nfunction Login() {\r\n    const unauthorizedErrorMsg = 'אחד מפרטי הזהות שהקשת אינם נכונים, אנא נסה שנית';\r\n    const generalErrorMsg = 'אנא נסה שנית מאוחר יותר או צור קשר עם שירות הלקוחות';\r\n    const [userName, updateUserName] = useState('');\r\n    const [pass, updatePass] = useState('');\r\n    const [isLoading, updateLoadingStatus] = useState(false);\r\n    const [errorMsg, updateErrorMsg] = useState(unauthorizedErrorMsg);\r\n    const [isLoginErrorMsgVisiable, updateLoginErrorMsgVisability] = useState(false);\r\n\r\n    function getGeneralGreeding(): string {\r\n        const today = new Date()\r\n        const currentHour = today.getHours()\r\n        if (currentHour < 6) {\r\n            return 'לילה טוב';\r\n        }\r\n        else if (currentHour < 12) {\r\n            return 'בוקר טוב';\r\n        } else if (currentHour < 18) {\r\n            return 'צהריים טובים';\r\n        }\r\n\r\n        return 'ערב טוב';\r\n    }\r\n\r\n    async function onSubmit(): Promise<void> {\r\n        try {\r\n            updateLoginErrorMsgVisability(false);\r\n            updateLoadingStatus(true);\r\n            const res = await httpClient.post(ROUTES.login, {\r\n                userName,\r\n                pass: btoa(pass)\r\n            });\r\n            updateLoadingStatus(false);\r\n            console.log(`res is ${JSON.stringify(res)}`);\r\n        } catch (error) {\r\n            handleLoginFailed(error);\r\n        }\r\n    }\r\n\r\n    function handleLoginFailed(error: AxiosError | Error) {\r\n        const axiosError = error as AxiosError;\r\n\r\n        if (axiosError.isAxiosError && axiosError.response?.status === 401) {\r\n            updateErrorMsg(unauthorizedErrorMsg);\r\n        }\r\n        else {\r\n            updateErrorMsg(generalErrorMsg);\r\n        }\r\n\r\n        updateLoginErrorMsgVisability(true);\r\n        updateLoadingStatus(false);\r\n        updatePass('');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {   isLoading &&\r\n                <Loading withOverlay={true}></Loading>\r\n            }\r\n            <div className=\"login\">\r\n                <div className=\"header\">\r\n                    <div className=\"left-side\">\r\n                    </div>\r\n                    <div className=\"right-side\">\r\n                        <div className=\"logo\">גלגלים</div>\r\n                        <div className=\"greeding\">{getGeneralGreeding()}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"credentials\">\r\n\r\n                    {   isLoginErrorMsgVisiable &&  \r\n                        <div className=\"input-group error\">\r\n                            <div className=\"close\" onClick={() => updateLoginErrorMsgVisability(false)}>x</div>\r\n                            { errorMsg } \r\n                        </div>\r\n                    }\r\n\r\n                    <div className=\"input-group username\">\r\n                        <label htmlFor=\"username\">שם משתמש</label>\r\n                        <input type=\"text\"\r\n                            name=\"username\"\r\n                            value={userName}\r\n                            onChange={(event) => updateUserName(event.target.value)}\r\n                        >\r\n                        </input>\r\n                    </div>\r\n\r\n                    <div className=\"input-group password\">\r\n                        <label htmlFor=\"password\">סיסמא</label>\r\n                        <input \r\n                            type=\"password\" \r\n                            name=\"password\" \r\n                            value={pass}\r\n                            onChange={(event) => updatePass(event.target.value)}\r\n                            >\r\n                        </input>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"input-group login-btn-wrapper\" onClick={() => onSubmit()}>\r\n                        <div className=\"login-btn\">כניסה</div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import Login from './login';\r\nexport default Login;","import React from 'react';\nimport './App.scss';\nimport Background from './components/background';\nimport Loading from './components/loading';\nimport Login from './pages/login';\n\nfunction App2() {\n  return (\n    <>\n    <Background />\n    <div className=\"wheels-app\">\n      <div className=\"header\">\n          <div className=\"left-side\">\n            <img src={\"https://scontent.fsdv1-2.fna.fbcdn.net/v/t1.0-9/1655987_10152772697488469_7371064372680920844_n.jpg?_nc_cat=108&ccb=3&_nc_sid=09cbfe&_nc_ohc=oOKtUGuw_rkAX_DAEul&_nc_ht=scontent.fsdv1-2.fna&oh=071cfd895bba71403f138341d3149a6c&oe=604D81F5\"}/>\n          </div>\n          <div className=\"right-side\">\n            <div className=\"logo\">גלגלים</div>\n            <div className=\"greeding\">היי רן גורדון</div>\n          </div>\n      </div>\n      <div className=\"claims\">\n        <div className=\"claim\">תביעה חדשה</div>\n        <div className=\"claim\">תביעה קיימת</div>\n      </div>\n      <div className=\"footer\">\n      </div>\n    </div>\n    </>\n  );\n}\n\n\nfunction App() {\n  return (\n    <>\n    <Background />\n    {/* <Loading withOverlay={true}></Loading> */}\n    <Login></Login>\n    </>\n  );\n}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}